SimulatedAnnealingGraph

A class for finding NPSTSP paths using simulated annealing.

To use this class, instantiate a SimulatedAnnealingGraph object with the seven required inputs. 
The seven inputs are the matrix representing the connections in the graph, the list of colors, 
the number of cities, the number of iterations, the cooling factor, and the start and end temperatures.  
To find a solution, call the anneal function on the graph object. To find the distance of the returned path, 
call tour_cost on the path (represented as a list of integers). Simulated annealing is an algorithm
that is similar in principle to hill climbing. It's advantage over hill climbing is that it occasionally 
examines solutions that are worse than the best current known solution, and this results in escaping
local maximums/minimums in hope of finding a global maximum/minimum in the solution space. By adjusting
the cooling factor, the probability of examining worse solutions changes. A higher starting temperature 
results in more exploration of worse solutions early on. A lower end temperature results in fewer worse 
examined later in the cycle. The number of iterations determines the number of times that the algorithm 
starts over from a random solution and builds from there. By tuning the cooling factor, number of 
iterations, and temperature variables, simulated annealing can outperform standard hill climbing and 
other greedy algorithms.   



